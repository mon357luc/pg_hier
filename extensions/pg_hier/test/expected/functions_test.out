-- Test for pg_hier extension functions
-- Test all public functions and their edge cases
-- Create the extension
CREATE EXTENSION IF NOT EXISTS pg_hier;
-- Test that the extension provides the expected objects
-- List all functions provided by pg_hier
SELECT proname, pronargs 
FROM pg_proc p 
JOIN pg_namespace n ON p.pronamespace = n.oid 
WHERE n.nspname = 'public' 
  AND p.oid IN (
    SELECT objid 
    FROM pg_depend 
    WHERE refobjid = (SELECT oid FROM pg_extension WHERE extname = 'pg_hier')
  )
ORDER BY proname;
        proname        | pronargs 
-----------------------+----------
 pg_hier               |        1
 pg_hier_create_hier   |        3
 pg_hier_find_hier     |        1
 pg_hier_format        |        1
 pg_hier_join          |        2
 pg_hier_make_key_step |        2
 pg_hier_parse         |        1
 quote_ident           |        1
(8 rows)

-- Test any types provided by pg_hier
SELECT typname 
FROM pg_type t 
JOIN pg_namespace n ON t.typnamespace = n.oid 
WHERE n.nspname = 'public' 
  AND t.oid IN (
    SELECT objid 
    FROM pg_depend 
    WHERE refobjid = (SELECT oid FROM pg_extension WHERE extname = 'pg_hier')
  )
ORDER BY typname;
     typname     
-----------------
 _pg_hier_detail
 _pg_hier_header
 pg_hier_detail
 pg_hier_header
(4 rows)

-- Add specific function tests here once you have functions implemented
-- Example: SELECT your_hier_function('test_input');
-- Clean up
DROP EXTENSION pg_hier;
